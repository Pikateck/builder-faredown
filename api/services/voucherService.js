/**
 * Voucher and Invoice Generation Service
 * Handles PDF generation for hotel booking vouchers and GST invoices
 */

const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

class VoucherService {
  constructor() {
    // Company details
    this.companyDetails = {
      name: 'Faredown Travel Private Limited',
      address: 'Mumbai, Maharashtra, India',
      phone: '+91-9876543210',
      email: 'support@faredown.com',
      website: 'www.faredown.com',
      gstin: '27AABCF1234A1Z5',
      pan: 'AABCF1234A'
    };
  }

  /**
   * Generate hotel booking voucher PDF
   */
  async generateHotelVoucher(bookingData) {
    try {
      const {
        bookingRef,
        hotelDetails,
        guestDetails,
        roomDetails,
        checkIn,
        checkOut,
        totalAmount,
        currency,
        paymentDetails,
        specialRequests
      } = bookingData;

      // Create PDF document
      const doc = new PDFDocument({ margin: 50 });
      const buffers = [];

      doc.on('data', buffer => buffers.push(buffer));\n      \n      // Add header\n      this.addVoucherHeader(doc);\n      \n      // Add booking information\n      this.addBookingInfo(doc, {\n        bookingRef,\n        bookingDate: new Date().toLocaleDateString('en-IN'),\n        status: 'Confirmed'\n      });\n      \n      // Add hotel details\n      this.addHotelDetails(doc, hotelDetails);\n      \n      // Add guest details\n      this.addGuestDetails(doc, guestDetails);\n      \n      // Add room and stay details\n      this.addStayDetails(doc, {\n        roomDetails,\n        checkIn,\n        checkOut,\n        nights: this.calculateNights(checkIn, checkOut)\n      });\n      \n      // Add special requests if any\n      if (specialRequests) {\n        this.addSpecialRequests(doc, specialRequests);\n      }\n      \n      // Add important notes\n      this.addImportantNotes(doc);\n      \n      // Add footer\n      this.addVoucherFooter(doc);\n      \n      doc.end();\n      \n      return new Promise((resolve, reject) => {\n        doc.on('end', () => {\n          const pdfBuffer = Buffer.concat(buffers);\n          resolve({\n            success: true,\n            pdf: pdfBuffer,\n            filename: `voucher_${bookingRef}.pdf`\n          });\n        });\n        \n        doc.on('error', reject);\n      });\n\n    } catch (error) {\n      console.error('Voucher generation error:', error);\n      throw new Error(`Failed to generate voucher: ${error.message}`);\n    }\n  }\n\n  /**\n   * Generate GST invoice PDF\n   */\n  async generateGSTInvoice(bookingData) {\n    try {\n      const {\n        bookingRef,\n        hotelDetails,\n        guestDetails,\n        roomDetails,\n        checkIn,\n        checkOut,\n        totalAmount,\n        currency,\n        paymentDetails,\n        markupDetails,\n        taxDetails\n      } = bookingData;\n\n      // Create PDF document\n      const doc = new PDFDocument({ margin: 50 });\n      const buffers = [];\n\n      doc.on('data', buffer => buffers.push(buffer));\n      \n      // Add invoice header\n      this.addInvoiceHeader(doc);\n      \n      // Add company and customer details\n      this.addInvoiceParties(doc, guestDetails);\n      \n      // Add invoice details\n      this.addInvoiceDetails(doc, {\n        invoiceNumber: `INV-${bookingRef}`,\n        invoiceDate: new Date().toLocaleDateString('en-IN'),\n        bookingRef\n      });\n      \n      // Add itemized billing\n      this.addItemizedBilling(doc, {\n        hotelDetails,\n        roomDetails,\n        checkIn,\n        checkOut,\n        totalAmount,\n        markupDetails,\n        taxDetails\n      });\n      \n      // Add tax summary\n      this.addTaxSummary(doc, taxDetails);\n      \n      // Add payment details\n      this.addPaymentDetails(doc, paymentDetails);\n      \n      // Add terms and conditions\n      this.addTermsAndConditions(doc);\n      \n      // Add invoice footer\n      this.addInvoiceFooter(doc);\n      \n      doc.end();\n      \n      return new Promise((resolve, reject) => {\n        doc.on('end', () => {\n          const pdfBuffer = Buffer.concat(buffers);\n          resolve({\n            success: true,\n            pdf: pdfBuffer,\n            filename: `invoice_${bookingRef}.pdf`\n          });\n        });\n        \n        doc.on('error', reject);\n      });\n\n    } catch (error) {\n      console.error('Invoice generation error:', error);\n      throw new Error(`Failed to generate invoice: ${error.message}`);\n    }\n  }\n\n  /**\n   * Add voucher header\n   */\n  addVoucherHeader(doc) {\n    doc.fontSize(24)\n       .font('Helvetica-Bold')\n       .fillColor('#2563eb')\n       .text('HOTEL BOOKING VOUCHER', 50, 50);\n    \n    // Add company logo area\n    doc.fontSize(12)\n       .font('Helvetica')\n       .fillColor('#000000')\n       .text(this.companyDetails.name, 400, 55)\n       .text(this.companyDetails.phone, 400, 70)\n       .text(this.companyDetails.email, 400, 85);\n    \n    // Add line separator\n    doc.moveTo(50, 110)\n       .lineTo(550, 110)\n       .strokeColor('#e5e7eb')\n       .stroke();\n  }\n\n  /**\n   * Add booking information\n   */\n  addBookingInfo(doc, bookingInfo) {\n    const startY = 130;\n    \n    doc.fontSize(14)\n       .font('Helvetica-Bold')\n       .text('Booking Information', 50, startY);\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(`Booking Reference: ${bookingInfo.bookingRef}`, 50, startY + 25)\n       .text(`Booking Date: ${bookingInfo.bookingDate}`, 50, startY + 40)\n       .text(`Status: ${bookingInfo.status}`, 50, startY + 55);\n    \n    // Add confirmation badge\n    doc.rect(400, startY + 20, 100, 25)\n       .fillAndStroke('#22c55e', '#16a34a')\n       .fillColor('#ffffff')\n       .font('Helvetica-Bold')\n       .text('CONFIRMED', 420, startY + 28)\n       .fillColor('#000000');\n  }\n\n  /**\n   * Add hotel details\n   */\n  addHotelDetails(doc, hotelDetails) {\n    const startY = 220;\n    \n    doc.fontSize(14)\n       .font('Helvetica-Bold')\n       .text('Hotel Details', 50, startY);\n    \n    doc.fontSize(11)\n       .font('Helvetica-Bold')\n       .text(hotelDetails.name || 'Hotel Name', 50, startY + 25);\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(hotelDetails.address || 'Hotel Address', 50, startY + 45)\n       .text(`Phone: ${hotelDetails.phone || 'N/A'}`, 50, startY + 60)\n       .text(`Email: ${hotelDetails.email || 'N/A'}`, 50, startY + 75);\n    \n    // Add star rating if available\n    if (hotelDetails.starRating) {\n      let stars = '';\n      for (let i = 0; i < hotelDetails.starRating; i++) {\n        stars += '★';\n      }\n      doc.fontSize(12)\n         .fillColor('#fbbf24')\n         .text(stars, 400, startY + 25)\n         .fillColor('#000000');\n    }\n  }\n\n  /**\n   * Add guest details\n   */\n  addGuestDetails(doc, guestDetails) {\n    const startY = 330;\n    \n    doc.fontSize(14)\n       .font('Helvetica-Bold')\n       .text('Guest Details', 50, startY);\n    \n    const primaryGuest = guestDetails.primaryGuest || {};\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(`Primary Guest: ${primaryGuest.title || ''} ${primaryGuest.firstName || ''} ${primaryGuest.lastName || ''}`, 50, startY + 25)\n       .text(`Email: ${guestDetails.contactInfo?.email || 'N/A'}`, 50, startY + 40)\n       .text(`Phone: ${guestDetails.contactInfo?.phone || 'N/A'}`, 50, startY + 55);\n    \n    // Add additional guests if any\n    if (guestDetails.additionalGuests && guestDetails.additionalGuests.length > 0) {\n      doc.text('Additional Guests:', 300, startY + 25);\n      guestDetails.additionalGuests.forEach((guest, index) => {\n        doc.text(`${index + 1}. ${guest.firstName} ${guest.lastName}`, 300, startY + 40 + (index * 15));\n      });\n    }\n  }\n\n  /**\n   * Add stay details\n   */\n  addStayDetails(doc, stayDetails) {\n    const startY = 430;\n    \n    doc.fontSize(14)\n       .font('Helvetica-Bold')\n       .text('Stay Details', 50, startY);\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(`Check-in Date: ${new Date(stayDetails.checkIn).toLocaleDateString('en-IN')}`, 50, startY + 25)\n       .text(`Check-out Date: ${new Date(stayDetails.checkOut).toLocaleDateString('en-IN')}`, 50, startY + 40)\n       .text(`Number of Nights: ${stayDetails.nights}`, 50, startY + 55);\n    \n    // Room details\n    const room = stayDetails.roomDetails || {};\n    doc.text(`Room Type: ${room.name || 'Standard Room'}`, 300, startY + 25)\n       .text(`Room Category: ${room.category || 'N/A'}`, 300, startY + 40)\n       .text(`Bed Type: ${room.bedType || 'N/A'}`, 300, startY + 55);\n  }\n\n  /**\n   * Add special requests\n   */\n  addSpecialRequests(doc, specialRequests) {\n    const startY = 530;\n    \n    doc.fontSize(14)\n       .font('Helvetica-Bold')\n       .text('Special Requests', 50, startY);\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(specialRequests, 50, startY + 20, { width: 500 });\n  }\n\n  /**\n   * Add important notes\n   */\n  addImportantNotes(doc) {\n    const startY = 600;\n    \n    doc.fontSize(12)\n       .font('Helvetica-Bold')\n       .fillColor('#dc2626')\n       .text('Important Notes:', 50, startY);\n    \n    const notes = [\n      '• Please carry a valid photo ID proof for check-in',\n      '• Check-in time is usually 3:00 PM and check-out time is 11:00 AM',\n      '• Present this voucher at the hotel reception during check-in',\n      '• Contact Faredown support for any booking modifications or cancellations',\n      '• Hotel amenities and services are subject to availability'\n    ];\n    \n    doc.fontSize(9)\n       .font('Helvetica')\n       .fillColor('#000000');\n    \n    notes.forEach((note, index) => {\n      doc.text(note, 50, startY + 25 + (index * 15));\n    });\n  }\n\n  /**\n   * Add voucher footer\n   */\n  addVoucherFooter(doc) {\n    const pageHeight = doc.page.height;\n    const footerY = pageHeight - 80;\n    \n    // Add separator line\n    doc.moveTo(50, footerY - 20)\n       .lineTo(550, footerY - 20)\n       .strokeColor('#e5e7eb')\n       .stroke();\n    \n    doc.fontSize(8)\n       .font('Helvetica')\n       .fillColor('#6b7280')\n       .text('This is a computer generated voucher and does not require a signature.', 50, footerY)\n       .text(`Generated on: ${new Date().toLocaleString('en-IN')}`, 50, footerY + 12)\n       .text('For support, contact: support@faredown.com | +91-9876543210', 50, footerY + 24);\n    \n    doc.text('Faredown Travel - Your Journey, Our Passion', 350, footerY + 12);\n  }\n\n  /**\n   * Add invoice header\n   */\n  addInvoiceHeader(doc) {\n    doc.fontSize(28)\n       .font('Helvetica-Bold')\n       .fillColor('#1f2937')\n       .text('TAX INVOICE', 50, 50);\n    \n    // Add company details\n    doc.fontSize(10)\n       .font('Helvetica')\n       .fillColor('#000000')\n       .text(this.companyDetails.name, 350, 55)\n       .text(this.companyDetails.address, 350, 70)\n       .text(`GSTIN: ${this.companyDetails.gstin}`, 350, 85)\n       .text(`PAN: ${this.companyDetails.pan}`, 350, 100);\n    \n    // Add line separator\n    doc.moveTo(50, 120)\n       .lineTo(550, 120)\n       .strokeColor('#e5e7eb')\n       .stroke();\n  }\n\n  /**\n   * Add invoice parties (company and customer)\n   */\n  addInvoiceParties(doc, guestDetails) {\n    const startY = 140;\n    \n    // Seller details\n    doc.fontSize(12)\n       .font('Helvetica-Bold')\n       .text('Seller Details:', 50, startY);\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(this.companyDetails.name, 50, startY + 20)\n       .text(this.companyDetails.address, 50, startY + 35)\n       .text(`Phone: ${this.companyDetails.phone}`, 50, startY + 50)\n       .text(`Email: ${this.companyDetails.email}`, 50, startY + 65);\n    \n    // Buyer details\n    doc.fontSize(12)\n       .font('Helvetica-Bold')\n       .text('Buyer Details:', 300, startY);\n    \n    const primaryGuest = guestDetails.primaryGuest || {};\n    const contactInfo = guestDetails.contactInfo || {};\n    \n    doc.fontSize(10)\n       .font('Helvetica')\n       .text(`${primaryGuest.title || ''} ${primaryGuest.firstName || ''} ${primaryGuest.lastName || ''}`, 300, startY + 20)\n       .text(`Email: ${contactInfo.email || 'N/A'}`, 300, startY + 35)\n       .text(`Phone: ${contactInfo.phone || 'N/A'}`, 300, startY + 50);\n  }\n\n  /**\n   * Calculate number of nights between check-in and check-out\n   */\n  calculateNights(checkIn, checkOut) {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const timeDiff = checkOutDate - checkInDate;\n    return Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Add itemized billing (placeholder - to be completed)\n   */\n  addItemizedBilling(doc, billingDetails) {\n    // Implementation for detailed billing breakdown\n    const startY = 260;\n    \n    doc.fontSize(12)\n       .font('Helvetica-Bold')\n       .text('Itemized Billing', 50, startY);\n    \n    // Add table headers and billing items\n    // This is a simplified version - can be expanded based on requirements\n  }\n\n  /**\n   * Add other invoice sections (placeholder)\n   */\n  addInvoiceDetails(doc, invoiceDetails) { /* Implementation */ }\n  addTaxSummary(doc, taxDetails) { /* Implementation */ }\n  addPaymentDetails(doc, paymentDetails) { /* Implementation */ }\n  addTermsAndConditions(doc) { /* Implementation */ }\n  addInvoiceFooter(doc) { /* Implementation */ }\n}\n\nmodule.exports = new VoucherService();"}